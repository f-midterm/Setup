// Jenkinsfile
pipeline {
    agent any // ‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ Jenkins ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ö‡∏ô node ‡πÑ‡∏´‡∏ô‡∏Å‡πá‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏°‡∏µ

    environment {
        // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏Å‡∏•‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô Pipeline
        // üõ°Ô∏è Security First: ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ Jenkins Credentials ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
        DOCKERHUB_CREDENTIALS_ID = 'apartment-dockerhub-credentials'
        DOCKERHUB_USERNAME = 'pipatpongpri404'
        PROJECT_NAME = 'apartment-management'
    }

    stages {
        stage('1. Checkout Code') {
            steps {
                echo 'Checking out code from Git...'
                git branch: 'main', url: 'https://github.com/f-midterm/Setup.git' // <-- ‚ùóÔ∏è ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô URL ‡∏Ç‡∏≠‡∏á Repo ‡∏Ñ‡∏∏‡∏ì
            }
        }

        stage('2. Build Backend') {
            steps {
                echo 'Building Spring Boot backend...'
                dir('backend') {
                    sh './gradlew clean build'
                }
            }
        }

        stage('3. Build Frontend') {
            steps {
                echo 'Building React frontend...'
                dir('frontend') {
                    sh 'npm install'
                    sh 'npm run build'
                }
            }
        }

        stage('4. Build Docker Images') {
            steps {
                echo 'Building Docker images...'
                script {
                    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Image Tag ‡∏à‡∏≤‡∏Å Build Number ‡∏Ç‡∏≠‡∏á Jenkins ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô
                    def imageTag = "${env.BUILD_NUMBER}"

                    // Build Image
                    sh "docker build -t ${env.DOCKERHUB_USERNAME}/${env.PROJECT_NAME}-backend:${imageTag} ./backend"
                    sh "docker build -t ${env.DOCKERHUB_USERNAME}/${env.PROJECT_NAME}-frontend:${imageTag} ./frontend"
                    sh "docker build -t ${env.DOCKERHUB_USERNAME}/${env.PROJECT_NAME}-nginx:${imageTag} ./nginx"

                    // üöÄ Performance Optimization: ‡∏•‡∏ö dangling images ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà
                    sh 'docker image prune -f'
                }
            }
        }

        stage('5. Push to Docker Hub') {
            steps {
                echo 'Logging in and pushing images to Docker Hub...'
                script {
                    def imageTag = "${env.BUILD_NUMBER}"
                    withCredentials([usernamePassword(credentialsId: env.DOCKERHUB_CREDENTIALS_ID, usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                        sh "echo ${DOCKER_PASS} | docker login -u ${DOCKER_USER} --password-stdin"
                        sh "docker push ${env.DOCKERHUB_USERNAME}/${env.PROJECT_NAME}-backend:${imageTag}"
                        sh "docker push ${env.DOCKERHUB_USERNAME}/${env.PROJECT_NAME}-frontend:${imageTag}"
                        sh "docker push ${env.DOCKERHUB_USERNAME}/${env.PROJECT_NAME}-nginx:${imageTag}"
                    }
                }
            }
        }

        stage('6. Deploy Application') {
            steps {
                echo 'Deploying application using Docker Compose...'
                //  ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á deploy ‡∏ö‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á Jenkins ‡πÄ‡∏≠‡∏á
                // ‡πÉ‡∏ô Production ‡∏à‡∏£‡∏¥‡∏á ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ SSH Agent ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏±‡πà‡∏á deploy ‡πÑ‡∏õ‡∏¢‡∏±‡∏á Server ‡∏≠‡∏∑‡πà‡∏ô
                sh 'docker-compose down' // ‡∏´‡∏¢‡∏∏‡∏î Container ‡πÄ‡∏Å‡πà‡∏≤ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
                sh 'docker-compose up -d'  // ‡πÄ‡∏£‡∏¥‡πà‡∏° Container ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished.'
            // Logout ‡∏à‡∏≤‡∏Å Docker Hub ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
            sh 'docker logout'
        }
    }
}